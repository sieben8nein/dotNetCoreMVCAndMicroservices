networks:
  database:
    driver: bridge
  dev:
    driver: bridge
services:
  apigateway:
    build:
      context: D:\Dokumente\SDU\Work\Experimental\dotNetCoreMVCAndMicroservices\MicroservicesTest
      dockerfile: APIGateway/Dockerfile
    container_name: apigateway
    depends_on:
    - noteservice
    - userservice
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: '5001'
      ASPNETCORE_HTTP_PORT: '8083'
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: apigateway
    ports:
    - published: 8083
      target: 80
    - published: 5001
      target: 443
    volumes:
    - C:\Users\Morph\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Morph\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  kafka:
    depends_on:
    - zookeeper
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2
    ports:
    - published: 9092
      target: 9092
    volumes:
    - kafka_data:/bitnami:rw
  mongodb:
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_ROOT_USERNAME: root
    image: mongo
    ports:
    - published: 27018
      target: 27017
    restart: always
  noteservice:
    build:
      context: D:\Dokumente\SDU\Work\Experimental\dotNetCoreMVCAndMicroservices\MicroservicesTest
      dockerfile: services/NoteService/Dockerfile
    container_name: noteservice
    depends_on:
    - kafka
    - mongodb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: '44301'
      ASPNETCORE_URLS: https://+:443;http://+:80
      Kafka__BootstrapServers: kafka:9092
      MongoDB__Host: mongodb
      MongoDB__Port: 27017
    hostname: noteservice
    image: noteservice:latest
    ports:
    - published: 44301
      target: 443
    - target: 8082
    restart: always
    volumes:
    - C:\Users\Morph\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Morph\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  userservice:
    build:
      context: D:\Dokumente\SDU\Work\Experimental\dotNetCoreMVCAndMicroservices\MicroservicesTest
      dockerfile: services/UserService/Dockerfile
    container_name: userservice
    depends_on:
    - kafka
    - mongodb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: '44300'
      ASPNETCORE_URLS: https://+:443;http://+:80
      MongoDB__Host: mongodb
      MongoDB__Port: 27017
    hostname: userservice
    image: userservice:latest
    ports:
    - published: 8081
      target: 80
    - published: 44300
      target: 443
    restart: always
    volumes:
    - C:\Users\Morph\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Morph\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  zookeeper:
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3
    ports:
    - published: 2181
      target: 2181
    volumes:
    - zookeeper_data:/bitnami:rw
version: '3.4'
volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local